{"ast":null,"code":"var _jsxFileName = \"/Users/ananalx/Desktop/work/coding_assignment/src/elements/Main.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, ButtonGroup, Stack, IconButton, Divider, Box, Paper, CardContent, CardActions, Card, TextField, Typography, InputAdornment, OutlinedInput, FormControl, InputLabel, FilledInput, List, ListItemText, ListItem, Checkbox } from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { Visibility, KeyboardArrowDown, DirectionsCar, BarChart, AttachMoney, Email, Apartment, DateRange, Clear } from \"@mui/icons-material\";\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_USERS = gql`\n  query GetUsers {\n    users {\n      id\n      name\n    }\n  }\n`;\nconst GET_USER = gql`\n  query MyQuery($name: String!) {\n    users(where: { name: { _eq: $name } }) {\n      name\n      id\n      todos\n    }\n  }\n`;\nconst ADD_TODO = gql`\n  mutation MyMutation($todo: jsonb!) {\n    update_users(where: { name: { _eq: \"test\" } }, _set: { todos: $todo }) {\n      returning {\n        id\n        todos\n        name\n      }\n    }\n  }\n`;\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: \"#696969\"\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: \"#11cb5f\"\n    }\n  }\n});\nconst label = {\n  inputProps: {\n    \"aria-label\": \"Checkbox demo\"\n  }\n};\nexport default function Main(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    name\n  } = _ref;\n  const [todos, setTodos] = useState([]);\n  const [buttonState, setButtonState] = useState([true, false, false]);\n  const [todoFetch, setTodoFetch] = useState(false);\n  const [clearCompleted, setClearCompleted] = useState(false);\n  const [reload, setReload] = useState(false);\n  const [firstLoad, setFirstLoad] = useState(false); //   const { loading, error, data } = useQuery(GET_USERS);\n\n  const query = useQuery(GET_USER, {\n    variables: {\n      name: \"test\"\n    },\n    pollInterval: 2000\n  });\n  const [addTodo, mutation] = useMutation(ADD_TODO);\n  let navigate = useNavigate();\n\n  const checkDisplay = val => {\n    if (buttonState[1]) {\n      if (val.completed) {\n        return \"none\";\n      }\n    }\n\n    if (buttonState[2]) {\n      if (!val.completed) {\n        return \"none\";\n      }\n    }\n  };\n\n  const Todo = _ref2 => {\n    _s();\n\n    let {\n      todo,\n      index,\n      reload\n    } = _ref2;\n    const [visible, setVisible] = useState(false);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: checkDisplay(todo)\n      },\n      onMouseEnter: () => setVisible(true),\n      onMouseLeave: () => setVisible(false),\n      children: /*#__PURE__*/_jsxDEV(List, {\n        style: {\n          width: \"100%\",\n          bgcolor: \"background.paper\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          style: {// textAlign:'center',\n          },\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, { ...label,\n            checked: todo.completed,\n            onChange: () => {\n              let temp = todos;\n              temp[index].completed = !temp[index].completed;\n              setTodos([...temp]);\n              setTodoFetch(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: todo.name,\n            style: {\n              paddingLeft: \"3%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"toggle password visibility\",\n            edge: \"end\",\n            style: {\n              display: visible ? \"flex\" : \"none\"\n            },\n            onClick: () => {\n              let temp = todos.filter(t => t.name !== todo.name);\n              console.log(temp);\n              setTodoFetch(true);\n              setTodos(temp);\n            },\n            children: /*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(Todo, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n\n  useEffect(() => {\n    let count = 0;\n    todos.forEach(todo => {\n      if (!todo.completed) {\n        count += 1;\n      }\n    });\n\n    if (count === todos.length) {\n      setClearCompleted(true);\n    } else setClearCompleted(false);\n\n    if (todoFetch) {\n      addTodo({\n        variables: {\n          todo: JSON.stringify(todos)\n        },\n        onCompleted: () => setTodoFetch(false)\n      });\n      console.log(\"todoFetch\", todoFetch);\n    }\n  }, [todos]);\n  useEffect(() => {\n    console.log(\"todoFetch\", todoFetch);\n  }, []);\n  useEffect(() => {\n    if (query.data) {\n      console.log(query.data);\n      if (todos.length === 0) setTodos(JSON.parse(query.data.users[0].todos));\n    }\n  }, [query.data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      background: \"linear-gradient(to right top,ghostwhite,floralwhite)\",\n      overflowY: \"scroll\",\n      paddingBottom: \"5%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        fontSize: \"4rem\",\n        fontFamily: \"gillsans\",\n        marginTop: \"10%\",\n        color: \"crimson\"\n      },\n      children: \"TODOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: \"35vw\"\n      },\n      variant: \"filled\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"filled-adornment-password\",\n        children: \"What needs to be done?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n        id: \"filled-adornment-password\",\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            console.log(\"enter\", e.target.value);\n            let temp = e.target.value;\n            setTodos(p => [...p, {\n              name: temp,\n              completed: false\n            }]);\n            setTodoFetch(true);\n            e.target.value = \"\";\n          }\n        },\n        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"toggle password visibility\",\n            onClick: () => {\n              let temp = todos;\n              let count = 0;\n              temp.forEach(t => {\n                if (t.completed === true) {\n                  count += 1;\n                }\n              });\n              console.log(count);\n\n              if (count === temp.length) {\n                temp.forEach(t => {\n                  t.completed = false;\n                });\n                setReload(!reload);\n                setTodoFetch(true);\n                setTodos([...temp]);\n                return;\n              }\n\n              temp.forEach(t => {\n                t.completed = true;\n              });\n              console.log(\"after\", count);\n              setReload(!reload);\n              setTodoFetch(true);\n              setTodos([...temp]);\n            },\n            edge: \"end\",\n            children: /*#__PURE__*/_jsxDEV(KeyboardArrowDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          height: \"auto\",\n          width: \"35vw\",\n          marginTop: \"2%\",\n          overflowY: \"scroll\"\n        },\n        children: [todos.map((todo, index) => /*#__PURE__*/_jsxDEV(Todo, {\n          todo: todo,\n          index: index,\n          reload: reload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)), todos.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\",\n            paddingBottom: \"2%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n            theme: theme,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"#696969\",\n              sx: {\n                fontSize: \".7rem\",\n                paddingLeft: \"2%\"\n              },\n              children: [todos.length, \" \", todos.length !== 1 ? \"items\" : \"item\", \" left\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              variant: \"text\",\n              \"aria-label\": \"outlined primary button group\",\n              color: \"primary\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  fontSize: \".7rem\",\n                  color: buttonState[0] ? \"coral\" : \"primary\"\n                },\n                onClick: () => setButtonState([true, false, false]),\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  fontSize: \".7rem\",\n                  color: buttonState[1] ? \"coral\" : \"primary\"\n                },\n                onClick: () => setButtonState([false, true, false]),\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  fontSize: \".7rem\",\n                  color: buttonState[2] ? \"coral\" : \"primary\"\n                },\n                onClick: () => setButtonState([false, false, true]),\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                fontSize: \".7rem\",\n                color: \"primary\"\n              },\n              disabled: clearCompleted,\n              onClick: () => {\n                let temp = todos.filter(todo => !todo.completed);\n                console.log(temp);\n                setTodoFetch(true);\n                setTodos(temp);\n              },\n              children: \"Clear Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Main, \"f6p1lX7TTozw8ak77dQMhO7p8V4=\", false, function () {\n  return [useQuery, useMutation, useNavigate];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","Button","ButtonGroup","Stack","IconButton","Divider","Box","Paper","CardContent","CardActions","Card","TextField","Typography","InputAdornment","OutlinedInput","FormControl","InputLabel","FilledInput","List","ListItemText","ListItem","Checkbox","createTheme","ThemeProvider","Visibility","KeyboardArrowDown","DirectionsCar","BarChart","AttachMoney","Email","Apartment","DateRange","Clear","useQuery","gql","useMutation","GET_USERS","GET_USER","ADD_TODO","theme","palette","primary","main","secondary","label","inputProps","Main","name","todos","setTodos","buttonState","setButtonState","todoFetch","setTodoFetch","clearCompleted","setClearCompleted","reload","setReload","firstLoad","setFirstLoad","query","variables","pollInterval","addTodo","mutation","navigate","checkDisplay","val","completed","Todo","todo","index","visible","setVisible","display","width","bgcolor","temp","paddingLeft","filter","t","console","log","count","forEach","length","JSON","stringify","onCompleted","data","parse","users","height","flexDirection","alignItems","background","overflowY","paddingBottom","fontSize","fontFamily","marginTop","color","m","e","key","target","value","p","map","justifyContent"],"sources":["/Users/ananalx/Desktop/work/coding_assignment/src/elements/Main.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Button,\n  ButtonGroup,\n  Stack,\n  IconButton,\n  Divider,\n  Box,\n  Paper,\n  CardContent,\n  CardActions,\n  Card,\n  TextField,\n  Typography,\n  InputAdornment,\n  OutlinedInput,\n  FormControl,\n  InputLabel,\n  FilledInput,\n  List,\n  ListItemText,\n  ListItem,\n  Checkbox,\n} from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport {\n  Visibility,\n  KeyboardArrowDown,\n  DirectionsCar,\n  BarChart,\n  AttachMoney,\n  Email,\n  Apartment,\n  DateRange,\n  Clear,\n} from \"@mui/icons-material\";\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\n\nconst GET_USERS = gql`\n  query GetUsers {\n    users {\n      id\n      name\n    }\n  }\n`;\n\nconst GET_USER = gql`\n  query MyQuery($name: String!) {\n    users(where: { name: { _eq: $name } }) {\n      name\n      id\n      todos\n    }\n  }\n`;\n\nconst ADD_TODO = gql`\n  mutation MyMutation($todo: jsonb!) {\n    update_users(where: { name: { _eq: \"test\" } }, _set: { todos: $todo }) {\n      returning {\n        id\n        todos\n        name\n      }\n    }\n  }\n`;\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: \"#696969\",\n    },\n    secondary: {\n      // This is green.A700 as hex.\n      main: \"#11cb5f\",\n    },\n  },\n});\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\nexport default function Main({ name }) {\n  const [todos, setTodos] = useState([]);\n  const [buttonState, setButtonState] = useState([true, false, false]);\n  const [todoFetch, setTodoFetch] = useState(false);\n  const [clearCompleted, setClearCompleted] = useState(false);\n  const [reload, setReload] = useState(false);\n  const [firstLoad, setFirstLoad] = useState(false);\n\n  //   const { loading, error, data } = useQuery(GET_USERS);\n  const query = useQuery(GET_USER, {\n    variables: { name: \"test\" },\n    pollInterval: 2000,\n  });\n\n  const [addTodo, mutation] = useMutation(ADD_TODO);\n\n  let navigate = useNavigate();\n\n  const checkDisplay = (val) => {\n    if (buttonState[1]) {\n      if (val.completed) {\n        return \"none\";\n      }\n    }\n    if (buttonState[2]) {\n      if (!val.completed) {\n        return \"none\";\n      }\n    }\n  };\n\n  const Todo = ({ todo, index, reload }) => {\n    const [visible, setVisible] = useState(false);\n    return (\n      <div\n        key={index}\n        style={{ display: checkDisplay(todo) }}\n        onMouseEnter={() => setVisible(true)}\n        onMouseLeave={() => setVisible(false)}\n      >\n        <List\n          style={{\n            width: \"100%\",\n            bgcolor: \"background.paper\",\n          }}\n        >\n          <ListItem\n            style={\n              {\n                // textAlign:'center',\n              }\n            }\n          >\n            <Checkbox\n              {...label}\n              checked={todo.completed}\n              onChange={() => {\n                let temp = todos;\n                temp[index].completed = !temp[index].completed;\n                setTodos([...temp]);\n                setTodoFetch(true);\n              }}\n            />\n            <ListItemText primary={todo.name} style={{ paddingLeft: \"3%\" }} />\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              edge=\"end\"\n              style={{ display: visible ? \"flex\" : \"none\" }}\n              onClick={() => {\n                let temp = todos.filter((t) => t.name !== todo.name);\n                console.log(temp);\n                setTodoFetch(true);\n                setTodos(temp);\n              }}\n            >\n              <Clear />\n            </IconButton>\n          </ListItem>\n          <Divider />\n        </List>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    let count = 0;\n    todos.forEach((todo) => {\n      if (!todo.completed) {\n        count += 1;\n      }\n    });\n    if (count === todos.length) {\n      setClearCompleted(true);\n    } else setClearCompleted(false);\n    if (todoFetch) {\n      addTodo({\n        variables: { todo: JSON.stringify(todos) },\n        onCompleted: () => setTodoFetch(false),\n      });\n      console.log(\"todoFetch\", todoFetch);\n    }\n  }, [todos]);\n\n  useEffect(() => {\n    console.log(\"todoFetch\", todoFetch);\n  }, []);\n\n  useEffect(() => {\n    if (query.data) {\n      console.log(query.data);\n      if (todos.length === 0) setTodos(JSON.parse(query.data.users[0].todos));\n    }\n  }, [query.data]);\n\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        background: \"linear-gradient(to right top,ghostwhite,floralwhite)\",\n        overflowY: \"scroll\",\n        paddingBottom: \"5%\",\n      }}\n    >\n      <Typography\n        style={{\n          fontSize: \"4rem\",\n          fontFamily: \"gillsans\",\n          marginTop: \"10%\",\n          color: \"crimson\",\n        }}\n      >\n        TODOS\n      </Typography>\n      <FormControl sx={{ m: 1, width: \"35vw\" }} variant=\"filled\">\n        <InputLabel htmlFor=\"filled-adornment-password\">\n          What needs to be done?\n        </InputLabel>\n        <FilledInput\n          id=\"filled-adornment-password\"\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              console.log(\"enter\", e.target.value);\n              let temp = e.target.value;\n              setTodos((p) => [...p, { name: temp, completed: false }]);\n              setTodoFetch(true);\n              e.target.value = \"\";\n            }\n          }}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={() => {\n                  let temp = todos;\n                  let count = 0;\n                  temp.forEach((t) => {\n                    if (t.completed === true) {\n                      count += 1;\n                    }\n                  });\n                  console.log(count);\n                  if (count === temp.length) {\n                    temp.forEach((t) => {\n                      t.completed = false;\n                    });\n                    setReload(!reload);\n                    setTodoFetch(true);\n                    setTodos([...temp]);\n                    return;\n                  }\n                  temp.forEach((t) => {\n                    t.completed = true;\n                  });\n                  console.log(\"after\", count);\n                  setReload(!reload);\n                  setTodoFetch(true);\n                  setTodos([...temp]);\n                }}\n                edge=\"end\"\n              >\n                <KeyboardArrowDown />\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Paper\n          elevation={3}\n          style={{\n            height: \"auto\",\n            width: \"35vw\",\n            marginTop: \"2%\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {todos.map((todo, index) => (\n            <Todo todo={todo} index={index} reload={reload} />\n          ))}\n          {todos.length > 0 ? (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-evenly\",\n                paddingBottom: \"2%\",\n              }}\n            >\n              <ThemeProvider theme={theme}>\n                <Typography\n                  color=\"#696969\"\n                  sx={{ fontSize: \".7rem\", paddingLeft: \"2%\" }}\n                >\n                  {todos.length} {todos.length !== 1 ? \"items\" : \"item\"} left\n                </Typography>\n\n                <ButtonGroup\n                  variant=\"text\"\n                  aria-label=\"outlined primary button group\"\n                  color=\"primary\"\n                >\n                  <Button\n                    sx={{\n                      fontSize: \".7rem\",\n                      color: buttonState[0] ? \"coral\" : \"primary\",\n                    }}\n                    onClick={() => setButtonState([true, false, false])}\n                  >\n                    All\n                  </Button>\n                  <Button\n                    sx={{\n                      fontSize: \".7rem\",\n                      color: buttonState[1] ? \"coral\" : \"primary\",\n                    }}\n                    onClick={() => setButtonState([false, true, false])}\n                  >\n                    Active\n                  </Button>\n                  <Button\n                    sx={{\n                      fontSize: \".7rem\",\n                      color: buttonState[2] ? \"coral\" : \"primary\",\n                    }}\n                    onClick={() => setButtonState([false, false, true])}\n                  >\n                    Completed\n                  </Button>\n                </ButtonGroup>\n                <Button\n                  sx={{\n                    fontSize: \".7rem\",\n                    color: \"primary\",\n                  }}\n                  disabled={clearCompleted}\n                  onClick={() => {\n                    let temp = todos.filter((todo) => !todo.completed);\n                    console.log(temp);\n                    setTodoFetch(true);\n                    setTodos(temp);\n                  }}\n                >\n                  Clear Completed\n                </Button>\n              </ThemeProvider>\n            </div>\n          ) : null}\n        </Paper>\n      </Box>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}